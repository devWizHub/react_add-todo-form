{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","todoInfoClasses","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","initialTodos","App","useState","undefined","selectedUser","setSelectedUser","inputValue","setInputValue","setTodos","userError","setUserError","inputError","setInputError","action","method","onSubmit","e","preventDefault","trim","newTodo","length","prevTodos","type","placeholder","value","onChange","target","style","color","selectedUserId","Number","person","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1063a755.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface UserInfoProps {\n  user: User;\n}\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      <p>\n        {name}\n      </p>\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface TodoInfoProps {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const { completed, title, user } = todo;\n  const todoInfoClasses = classNames('TodoInfo', {\n    'TodoInfo--completed': completed,\n  });\n\n  return (\n    <article className={todoInfoClasses}>\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      { user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface ToDoListProps {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC <ToDoListProps> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [selectedUser, setSelectedUser]\n  = useState< number | undefined>(undefined);\n  const [inputValue, setInputValue] = useState('');\n  const [todos, setTodos] = useState(initialTodos);\n  const [userError, setUserError] = useState('');\n  const [inputError, setInputError] = useState('');\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!selectedUser) {\n      setUserError('Please choose a user');\n\n      return;\n    }\n\n    if (!inputValue.trim()) {\n      setInputError('Please enter a title');\n\n      return;\n    }\n\n    const newTodo = {\n      id: todos.length + 1,\n      title: inputValue,\n      completed: false,\n      userId: selectedUser,\n      user: getUser(selectedUser),\n    };\n\n    setTodos((prevTodos) => [...prevTodos, newTodo]);\n    setSelectedUser(undefined);\n    setUserError('');\n    setInputValue('');\n  };\n\n  const handleUserChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedUserId = Number(e.target.value);\n\n    setSelectedUser(selectedUserId);\n    setUserError('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <span className=\"\">Title: </span>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n          />\n          {inputError && <span style={{ color: 'red' }}>{inputError}</span>}\n\n        </div>\n\n        <div className=\"field\">\n          <span className=\"\">User: </span>\n\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={handleUserChange}\n          >\n            <option value=\"\">Choose a user</option>\n\n            {usersFromServer.map(person => {\n              return (\n                <option\n                  key={person.id}\n                  value={person.id}\n                >\n                  {person.name}\n                </option>\n              );\n            })}\n          </select>\n          {userError && <span style={{ color: 'red' }}>{userError}</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}